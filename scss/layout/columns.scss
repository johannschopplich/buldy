@use "sass:map";
@use "sass:math";
@use "../abstracts/breakpoints";

$columns: 12 !default;
$gaps: s, m, l !default;

.columns {
  display: flex;
  flex-wrap: wrap;
  // Emulated gap until Safari supports Flexbox gap
  margin-left: calc(-1 * var(--column-gap, 0));
  margin-bottom: calc(-1 * var(--column-gap, 0));
  // Use gap property instead once supported in Safari
  // gap: var(--column-gap, 0);

  //
  // Modifiers
  //

  &.has-gap {
    --column-gap: 1ch;
  }

  &.is-centered {
    justify-content: center;
  }

  &.is-vcentered {
    align-items: center;
  }

  //
  // Gaps
  //

  @each $gap in $gaps {
    &.has-gap-#{$gap} {
      --column-gap: var(--space-#{$gap});
    }
  }

  //
  // Columns
  //

  > .column {
    display: block;
    flex: 1; // Shorthand for `flex: 1 1 0`
    padding-left: var(--column-gap, 0);
    padding-bottom: var(--column-gap, 0);

    @each $breakpoint in map.keys(breakpoints.$default) {
      @include breakpoints.media-above($breakpoint, breakpoints.$default) {
        $infix: breakpoints.infix($breakpoint, breakpoints.$default);

        &.#{$infix}is-narrow {
          flex: 0 0 auto;
          width: auto;
        }

        &.#{$infix}is-auto {
          flex: 1;
          width: auto;
        }

        &.#{$infix}is-full {
          flex: none;
          width: 100%;
        }

        @for $i from 1 through $columns {
          &.#{$infix}is-#{$i} {
            flex: none;
            width: math.percentage(math.div($i, 12));
          }
        }
      }
    }
  }
}
