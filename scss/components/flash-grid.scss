$grid-columns: 12 !default;

.grid,
[class*="grid-auto-"] {
  display: grid;
  gap: var(--grid-gap, 0);
}

.grid {
  --grid-columns: #{$grid-columns};
  grid-template-columns: repeat(var(--grid-columns), 1fr);

  > * {
    grid-column: span var(--span, #{$grid-columns}) / span var(--span, #{$grid-columns});
  }
}

.grid-auto-xsmall,
.grid-auto-small,
.grid-auto-medium,
.grid-auto-large,
.grid-auto-xlarge {
  grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
}

.grid,
[class*="grid-auto-"] {
  &.has-gap-xsmall { --grid-gap: var(--space-xs); }
  &.has-gap-small  { --grid-gap: var(--space-s); }
  &.has-gap-medium { --grid-gap: var(--space-m); }
  &.has-gap-large  { --grid-gap: var(--space-l); }
  &.has-gap-xlarge { --grid-gap: var(--space-xl); }
}

//
// Breakpoints
//

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-above($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .grid-auto-xsmall#{$infix} { --col-min-width: 8rem; }
    .grid-auto-small#{$infix} { --col-min-width: 10rem; }
    .grid-auto-medium#{$infix} { --col-min-width: 15rem; }
    .grid-auto-large#{$infix} { --col-min-width: 20rem; }
    .grid-auto-xlarge#{$infix} { --col-min-width: 25rem; }

    .grid-auto-columns#{$infix} {
      grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
    }

    @for $i from 1 through $grid-columns {
      .column-#{$i}#{$infix} { --span: #{$i}; }
      .column-start-#{$i}#{$infix} { grid-column-start: #{$i}; }
      .column-end-#{$i + 1}#{$infix} { grid-column-end: #{$i + 1}; }
    }

    .column-start#{$infix} { grid-column-start: 1; }
    .column-end#{$infix}   { grid-column-end: -1; }

    .column-start-auto#{$infix} { grid-column-start: auto; }
    .column-end-auto#{$infix}   { grid-column-end: auto; }
  }
}
