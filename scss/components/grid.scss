.column {
  display: block;
  flex: 1 1 0;
  padding: var(--space-small);

  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-above($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

      &.is#{$infix}-narrow {
        flex: 0 0 auto;
        width: auto;
      }

      &.is#{$infix}-full {
        flex: none;
        width: 100%;
      }

      @for $i from 1 through 12 {
        &.is#{$infix}-#{$i} {
          flex: none;
          width: percentage($i / 12);
        }
      }
    }
  }
}

.columns {
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(var(--space-small) * -1);
  margin-right: calc(var(--space-small) * -1);
  margin-left: calc(var(--space-small) * -1);
  &:last-child {
    margin-bottom: calc(var(--space-small) * -1);
  }
  &:not(:last-child) {
    margin-bottom: calc(var(--component-spacer) - var(--space-small));
  }

  //
  // Modifiers
  //

  &.is-gapless {
    margin-top: 0;
    margin-right: 0;
    margin-left: 0;
    > .column {
      margin: 0;
      padding: 0 !important;
    }
    &:not(:last-child) {
      margin-bottom: var(--component-spacer);
    }
    &:last-child {
      margin-bottom: 0;
    }
  }

  &.is-wrappless {
    flex-wrap: nowrap;
  }

  &.is-centered {
    justify-content: center;
  }

  &.is-vcentered {
    align-items: center;
  }

  //
  // Gap sizes
  //

  &.has-gap-xsmall,
  &.has-gap-small,
  &.has-gap-medium,
  &.has-gap-large,
  &.has-gap-xlarge {
    margin-right: calc(-1 * var(--column-gap));
    margin-left: calc(-1 * var(--column-gap));
    > .column {
      padding-right: var(--column-gap);
      padding-left: var(--column-gap);
    }
  }

  &.has-gap-xsmall { --column-gap: var(--space-xsmall); }
  &.has-gap-small  { --column-gap: var(--space-small); }
  &.has-gap-medium { --column-gap: var(--space-medium); }
  &.has-gap-large  { --column-gap: var(--space-large); }
  &.has-gap-xlarge { --column-gap: var(--space-xlarge); }
}
