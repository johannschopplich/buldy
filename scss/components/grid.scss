.column {
  display: block;
  flex-grow: 1;
  flex-shrink: 1;
  flex-basis: 0;
  padding: var(--space-s);

  @each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-above($breakpoint) {
      $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

      &.is-narrow#{$infix} {
        flex: 0 0 auto;
        width: auto;
      }

      &.is-full#{$infix} {
        flex: none;
        width: 100%;
      }

      @for $i from 1 through 12 {
        &.is-#{$i}#{$infix} {
          flex: none;
          width: percentage($i / 12);
        }
      }
    }
  }
}

.columns {
  display: flex;
  flex-wrap: wrap;
  margin-top: calc(var(--space-s) * -1);
  margin-right: calc(var(--space-s) * -1);
  margin-left: calc(var(--space-s) * -1);

  &:last-child {
    margin-bottom: calc(var(--space-s) * -1);
  }

  &:not(:last-child) {
    margin-bottom: calc(var(--component-spacer) - var(--space-s));
  }

  //
  // Modifiers
  //

  &.is-gapless {
    margin-top: 0;
    margin-right: 0;
    margin-left: 0;

    > .column {
      margin: 0;
      padding: 0 !important;
    }

    &:not(:last-child) {
      margin-bottom: var(--component-spacer);
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  &.is-wrappless {
    flex-wrap: nowrap;
  }

  &.is-centered {
    justify-content: center;
  }

  &.is-vcentered {
    align-items: center;
  }

  //
  // Gap sizes
  //

  &.has-gap-xs,
  &.has-gap-s,
  &.has-gap-m,
  &.has-gap-l,
  &.has-gap-xl {
    margin-right: calc(-1 * var(--column-gap));
    margin-left: calc(-1 * var(--column-gap));

    > .column {
      padding-right: var(--column-gap);
      padding-left: var(--column-gap);
    }
  }

  &.has-gap-xs { --column-gap: var(--space-xs); }
  &.has-gap-s  { --column-gap: var(--space-s); }
  &.has-gap-m  { --column-gap: var(--space-m); }
  &.has-gap-l  { --column-gap: var(--space-l); }
  &.has-gap-xl { --column-gap: var(--space-xl); }
}
