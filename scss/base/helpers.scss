//
// Colors
//

$colors: "primary", "accent";
@each $value in $colors {
  .has-text-#{$value}          { color: var(--color-#{$value}) !important; }
  .has-background-#{$value}    { background-color: var(--color-#{$value}) !important; }
}

$shades: "lowest", "lower", "low", "medium", "high", "higher", "black";
@each $value in $shades {
  .has-text-#{$value}          { color: var(--color-contrast-#{$value}) !important; }
  .has-background-#{$value}    { background-color: var(--color-contrast-#{$value}) !important; }
}

.has-text-current-color        { color: currentColor !important; }
.has-background-current-color  { background-color: currentColor !important; }

//
// Common spacing values
//

$spacers: "xxxsmall", "xxsmall", "xsmall", "small", "medium", "large", "xlarge", "xxlarge", "xxxlarge";
@each $size in $spacers {
  .has-padding-#{$size}        { padding: var(--space-#{$size}) !important; }
  .has-padding-top-#{$size}    { padding-top: var(--space-#{$size}) !important; }
  .has-padding-bottom-#{$size} { padding-bottom: var(--space-#{$size}) !important; }

  .has-margin-#{$size}         { margin: var(--space-#{$size}) !important; }
  .has-margin-top-#{$size}     { margin-top: var(--space-#{$size}) !important; }
  .has-margin-bottom-#{$size}  { margin-bottom: var(--space-#{$size}) !important; }
}

//
// Text sizes
//

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    @for $i from 1 through 6 {
      .is-size#{$infix}-#{$i} {
        font-size: var(--text-#{$i}) !important;
      }
    }

    .is-size#{$infix}-small {
      font-size: var(--text-small) !important;
    }
  }
}

//
// Typography
//

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .has-text#{$infix}-left     { text-align: left !important; }
    .has-text#{$infix}-right    { text-align: right !important; }
    .has-text#{$infix}-centered { text-align: center !important; }
  }
}

.has-text-weight-light    { font-weight: 300 !important; }
.has-text-weight-normal   { font-weight: 400 !important; }
.has-text-weight-semibold { font-weight: 600 !important; }
.has-text-weight-bold     { font-weight: 700 !important; }

//
// Accessability
//

// Make element visually invisible but still accessible to screen-readers
.is-sr-only {
  position: absolute;
  width: 1px;
  height: auto;
  clip: rect(0 0 0 0);
  border: 0;
  padding: 0;
  margin: 0;
  overflow: hidden;
  white-space: nowrap;
}

//
// Miscellaneous
//

.is-marginless {
  margin: 0 !important;
}

.is-paddingless {
  padding: 0 !important;
}

.is-radiusless {
  border-radius: 0 !important;
}

.is-shadowless {
  box-shadow: none !important;
}

.is-unselectable {
  @extend %unselectable;
}

.is-contained {
  object-fit: contain !important;
}

.is-covered {
  object-fit: cover !important;
}

.is-full-bleed {
  width: 100vw;
  margin-left: calc(50% - 50vw);

  // A `full-bleed` helper variation, which doesn't need calc()
  // width: 100vw;
  // position: relative;
  // left: 50%;
  // right: 50%;
  // margin-left: -50vw;
  // margin-right: -50vw;
}

// Vertically and horizontally center content
.is-both-centered {
  // Place *all* descendants in the center
  // display: grid;
  // place-items: center;

  // A more resilient version for only one descendant
  display: flex;
  & > *:only-child {
    margin: auto;
  }
}


//
// Common `display` values
//

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
    .is#{$infix}-hidden { display: none !important; }
    .is#{$infix}-inline { display: inline !important; }
    .is#{$infix}-block  { display: block !important; }
  }
}
